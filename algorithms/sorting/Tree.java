package basic.algorithm2.algorithms.sorting;

public class Tree {

}

/*
* Heap의 구조는 완전 이진 트리 
* 완전 이진 트리 란? = 완전한 이진 구조를 가진 트리
* 
* ex) [3, 5, 2, 10, 15, 16, 17]
* 부모 = '(', 자식 ='~'   
*                                                     (데이터의 개수)
*                        3(                          | 1        = 1  
*                /                  \                |(1)
*             3(5~(                3(2~(             | 1 0      = 2
*           /       \            /       \           |(2 1)
*    3(~5(~10(   3(5~(~15(   3(2~(~16(   3(2~(~17(   | 1 0 0    = 4
*                                                    |(4 2 1)
*                                                    |...       = 8
*                                                    |...       = 16
*                                                    |...       = 32   
*   쉽게 생각하면 아래층과 위층의 차이가 2배인 피라미드
*       노드 = 0| <-0층
*           |00| <-1층
*          |0000| ...
*        |00000000| ...  
*        
*   그럼 위의 예제 트리노드의 총 개수와 층수는?
*   총 개수 = 층수(깊이) [0, 1, 2] 3층이니까 3자리의 이진법을 합치면 됨
*   // 이 규칙을 벗어나면 완전 이진트리가 아니게 되어 복잡한 구조가 됨
*           0 0 1
*           0 1 0
*        +  1 0 0
*           _____
*        =  1 1 1 
*        =  4+2+1 = 7개의 노드
*        * 4층이면 17, 5층이면 33... 즉, (2의제곱 +1(root node))
*        
*        
*    예제를 정렬 후 Index로 탐색하려면?
*    최소 힙 정렬 후 [2, 3, 5, 10, 15, 16, 17] 
*    
*    부모 노드 = (i-1)/2                     
*    왼쪽 자식 노드 = 2i+1                    
*    오른쪽 자식 노드 = 2i+2                   
*    
*                      2       | 0층
*                  3       5   | 1층
*                10 15   16 17 | 2층
*    
*    i = Index;
*    Index[0]의 왼쪽 자식의 Index는?(i = 0)
*    왼쪽 자식 노드 = 2i+1  
*    2 * [0] + 1 = [1]  = [2, |3|, 5, 10, 15, 16, 17]
*    // 0층의 자식은 1층에 존재
*    
*    Index [1]의 오른쪽 자식은?(i = 1)
*    2 * [1] + 2 = [4]  = [2, 3, 5, 10, |15|, 16, 17]
*    // 1층의 자식은 2층에 존재
*    
*    ============================================
*    Index[0]의 오른쪽 자식의 Index는?(i = 0)   
*    2 * [0] + 2 = [2]  = [2, 3, |5|, 10, 15, 16, 17]
*    
*    반대로 부모의 인덱스를 구하려면?(i = 6)  
*    17의 Index = [6]
*    (i-1)/2 = ([6]-1)/2 = [2] =  [2, 3, |5|, 10, 15, 16, 17]
*                                          
*     //완전이진트리에서는 배열 구조의 사용 가능 이유는 아래 배열에서 보이듯이 규칙이 존재함
*     //층 수만 알면 총 노드의 개수를 알 수 있고, 특정 인덱스에서 부모나 자식의 노드로 쉽게 접근이 가능함                                      
*    [[1], [2, 3], [4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15], [16...]                                      
*/

